#include <iostream>

int main()
{
    int nums[]{1, 2, 3, 4, 5};

    std::cout << "nums[0] address: " << nums << std::endl; // имя массива является указателем (адресом в памяти) на его нулевой элемент - nums[0] address: 0xc5d7fff810

    std::cout << "nums[1] address: " << &nums[1] << std::endl; // указатель на следующий элемент вернет адрес 0xc5d7fff814, т.к. длина одного int - 4 байта

    std::cout << "nums[0] value: " << *nums << std::endl; // разыменование имени массива вернет его нулевой элемент - 1

    // Прибавляя к адресу первого элемента некоторое число, мы можем получить определенный элемент массива:

    std::cout << *(nums + 1) << "\n"; // вернет 2
    std::cout << *(nums + 4) << "\n"; // вернет 5

// указатель на массив

    int *ptr{nums};
    std::cout << ptr << "\n";  //выведет адрес нулевого элемента
    int num3 = *(ptr + 2);
    std::cout << num3 << "\n"; // выведет элемент с индексом 2, т.е цифру 3
    //------------------------

 // через указатели можно перебрать массив:
    const int n = 5;
    int nums2[n]{1, 2, 3, 4, 5};
    // Так как указатель хранит адрес, то мы можем продолжать цикл, пока адрес в указателе не станет равным адресу последнего элемента.
    for (int *ptr{nums}; ptr <= &nums[n - 1]; ptr++)
    {
        std::cout << "address=" << ptr << "\tvalue=" << *ptr << std::endl;
    }
}